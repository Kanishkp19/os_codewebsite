{"ast":null,"code":"// Fix 1: Remove unused import\nimport React,{useState,useEffect}from'react';import{Home,Users,Calendar,Briefcase,MessageSquare,// Remove 'Upload' from here\nPlus,Edit2,Trash2,LogOut,Menu,X,Save,Eye,EyeOff}from'lucide-react';// Fix 2: Add useCallback to fix dependency warnings\nimport{useCallback}from'react';const AdminApp=()=>{// ... existing state code ...\n// Dashboard Component with fixed useEffect\nconst Dashboard=_ref=>{let{sessionId}=_ref;const[stats,setStats]=useState({});const[recentActivity,setRecentActivity]=useState({contacts:[],events:[]});const fetchDashboardData=useCallback(async()=>{try{const response=await fetch(\"\".concat(BACKEND_URL,\"/api/admin/dashboard-stats?session_id=\").concat(sessionId));const data=await response.json();setStats(data.stats);setRecentActivity({contacts:data.recent_contacts||[],events:data.recent_events||[]});}catch(error){console.error('Failed to fetch dashboard data:',error);}},[sessionId]);useEffect(()=>{fetchDashboardData();},[fetchDashboardData]);// ... rest of Dashboard component\n};// Team Management with fixed useEffect\nconst TeamManagement=_ref2=>{let{sessionId}=_ref2;const[members,setMembers]=useState([]);// ... other state\nconst fetchTeamMembers=useCallback(async()=>{try{const response=await fetch(\"\".concat(BACKEND_URL,\"/api/admin/team-members?session_id=\").concat(sessionId));const data=await response.json();setMembers(data);}catch(error){console.error('Failed to fetch team members:',error);}},[sessionId]);useEffect(()=>{fetchTeamMembers();},[fetchTeamMembers]);// ... rest of component\n};// Events Management with fixed useEffect  \nconst EventsManagement=_ref3=>{let{sessionId}=_ref3;const[events,setEvents]=useState([]);// ... other state\nconst fetchEvents=useCallback(async()=>{try{const response=await fetch(\"\".concat(BACKEND_URL,\"/api/admin/events?session_id=\").concat(sessionId));const data=await response.json();setEvents(data);}catch(error){console.error('Failed to fetch events:',error);}},[sessionId]);useEffect(()=>{fetchEvents();},[fetchEvents]);// ... rest of component\n};// Contact Forms with fixed useEffect\nconst ContactFormsManagement=_ref4=>{let{sessionId}=_ref4;const[contacts,setContacts]=useState([]);const fetchContacts=useCallback(async()=>{try{const response=await fetch(\"\".concat(BACKEND_URL,\"/api/admin/contact-forms?session_id=\").concat(sessionId));const data=await response.json();setContacts(data);}catch(error){console.error('Failed to fetch contacts:',error);}},[sessionId]);useEffect(()=>{fetchContacts();},[fetchContacts]);// ... rest of component\n};// ... rest of AdminApp component\n};","map":{"version":3,"names":["React","useState","useEffect","Home","Users","Calendar","Briefcase","MessageSquare","Plus","Edit2","Trash2","LogOut","Menu","X","Save","Eye","EyeOff","useCallback","AdminApp","Dashboard","_ref","sessionId","stats","setStats","recentActivity","setRecentActivity","contacts","events","fetchDashboardData","response","fetch","concat","BACKEND_URL","data","json","recent_contacts","recent_events","error","console","TeamManagement","_ref2","members","setMembers","fetchTeamMembers","EventsManagement","_ref3","setEvents","fetchEvents","ContactFormsManagement","_ref4","setContacts","fetchContacts"],"sources":["/home/kanishk/oscode-website/frontend/src/AdminApp.js"],"sourcesContent":["// Fix 1: Remove unused import\nimport React, { useState, useEffect } from 'react';\nimport { \n  Home, Users, Calendar, Briefcase, MessageSquare, // Remove 'Upload' from here\n  Plus, Edit2, Trash2, LogOut, Menu, X, Save, Eye, EyeOff \n} from 'lucide-react';\n\n// Fix 2: Add useCallback to fix dependency warnings\nimport { useCallback } from 'react';\n\nconst AdminApp = () => {\n  // ... existing state code ...\n\n  // Dashboard Component with fixed useEffect\n  const Dashboard = ({ sessionId }) => {\n    const [stats, setStats] = useState({});\n    const [recentActivity, setRecentActivity] = useState({ contacts: [], events: [] });\n\n    const fetchDashboardData = useCallback(async () => {\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/admin/dashboard-stats?session_id=${sessionId}`);\n        const data = await response.json();\n        setStats(data.stats);\n        setRecentActivity({\n          contacts: data.recent_contacts || [],\n          events: data.recent_events || []\n        });\n      } catch (error) {\n        console.error('Failed to fetch dashboard data:', error);\n      }\n    }, [sessionId]);\n\n    useEffect(() => {\n      fetchDashboardData();\n    }, [fetchDashboardData]);\n\n    // ... rest of Dashboard component\n  };\n\n  // Team Management with fixed useEffect\n  const TeamManagement = ({ sessionId }) => {\n    const [members, setMembers] = useState([]);\n    // ... other state\n\n    const fetchTeamMembers = useCallback(async () => {\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/admin/team-members?session_id=${sessionId}`);\n        const data = await response.json();\n        setMembers(data);\n      } catch (error) {\n        console.error('Failed to fetch team members:', error);\n      }\n    }, [sessionId]);\n\n    useEffect(() => {\n      fetchTeamMembers();\n    }, [fetchTeamMembers]);\n\n    // ... rest of component\n  };\n\n  // Events Management with fixed useEffect  \n  const EventsManagement = ({ sessionId }) => {\n    const [events, setEvents] = useState([]);\n    // ... other state\n\n    const fetchEvents = useCallback(async () => {\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/admin/events?session_id=${sessionId}`);\n        const data = await response.json();\n        setEvents(data);\n      } catch (error) {\n        console.error('Failed to fetch events:', error);\n      }\n    }, [sessionId]);\n\n    useEffect(() => {\n      fetchEvents();\n    }, [fetchEvents]);\n\n    // ... rest of component\n  };\n\n  // Contact Forms with fixed useEffect\n  const ContactFormsManagement = ({ sessionId }) => {\n    const [contacts, setContacts] = useState([]);\n\n    const fetchContacts = useCallback(async () => {\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/admin/contact-forms?session_id=${sessionId}`);\n        const data = await response.json();\n        setContacts(data);\n      } catch (error) {\n        console.error('Failed to fetch contacts:', error);\n      }\n    }, [sessionId]);\n\n    useEffect(() => {\n      fetchContacts();\n    }, [fetchContacts]);\n\n    // ... rest of component\n  };\n\n  // ... rest of AdminApp component\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}